* Toveri

A minimal process ring buffer to supervise and rotate on processes. It's like a
process pool except that you don't keep hold of a process when you fetch one
from a buffer.

** API

**** Make a sized ring buffer

#+BEGIN_SRC
toveri:new(RingBufName, Size) -> {ok, Pid}

RingBufName = atom()
Size = non_neg_integer()
Pid = pid()
#+END_SRC

**** Add a child (or a number of children) to a ring buffer

#+BEGIN_SRC
add_child(RingBufName, MFA) -> ok
add_child(RingBufName, MFA, Count) -> ok

RingBufName = atom()
MFA = mfa()
Count = non_neg_integer()
#+END_SRC

**** Get a process from a ring buffer

#+BEGIN_SRC
toveri:get(RingBufName) -> {ok, Pid} | {error, {empty, Pos}}

RingBufName = atom()
Pid = pid()
Pos = non_neg_integer()
#+END_SRC

**** Delete a supervised process ring buffer

#+BEGIN_SRC
toveri:delete(RingBufName) -> ok

RingBufName = atom()
#+END_SRC
